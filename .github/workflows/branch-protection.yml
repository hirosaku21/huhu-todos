name: Branch Protection

on:
  pull_request:
    branches:
      - main

permissions:
  pull-requests: read
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Copy .env
        run: |
          cp .env.example .env.testing
          echo "VITE_ENABLED=true" >> .env.testing
        
      - name: Install PHP Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Install Node.js Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build
        
      - name: Generate key
        run: php artisan key:generate --env=testing
        
      - name: Execute tests
        run: php artisan test
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: root
          DB_PASSWORD: password
          VITE_ENABLED: true

  check-review:
    runs-on: ubuntu-latest
    steps:
      - name: Check Pull Request Review
        uses: actions/github-script@v7
        with:
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const hasApproval = reviews.some(review => review.state === 'APPROVED');
            
            if (!hasApproval) {
              core.setFailed('このPRをマージするには、少なくとも1つの承認が必要です。');
            } 